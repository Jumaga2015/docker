services:

  db:
    image: mariadb:10.6
    container_name: mariadb
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    restart: always
    volumes:
      - nextcloud-db:/var/lib/mysql:Z
    environment:
      - MYSQL_ROOT_PASSWORD=QCorporation#3
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_DISABLE_UPGRADE_BACKUP=1
    env_file:
      - db.env

  # crear este fichero en el sistema host con root.
  # echo "vm.overcommit_memory = 1" > /etc/sysctl.d/10-overcommit.conf
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    volumes:
      - redis-data:/data

  openldap:
    image: osixia/openldap:latest
    container_name: openldap
    hostname: openldap
    ports: 
      - "389:389"
      - "636:636"
    volumes:
      - openldap-certificates:/container/service/slapd/assets/certs
      - openldap-slapd-database:/var/lib/ldap
      - openldap-slapd-config:/etc/ldap/slapd.d
    environment: 
      - LDAP_ORGANISATION=qloudserver
      - LDAP_DOMAIN=qloudserver.es
      - LDAP_ADMIN_USERNAME=admin
      - LDAP_ADMIN_PASSWORD=qloud
      - LDAP_CONFIG_PASSWORD=config_pass
      #cn=admin,dc=qloudserver,dc=es
      - LDAP_BASE_DN=dc=qloudserver,dc=es
      - LDAP_TLS_CRT_FILENAME=server.crt
      - LDAP_TLS_KEY_FILENAME=server.key
      - LDAP_TLS_CA_CRT_FILENAME=qloudserver.es.ca.crt
      - LDAP_READONLY_USER=true
      - LDAP_READONLY_USER_USERNAME=user-ro
      - LDAP_READONLY_USER_PASSWORD=qloud
    networks:
      - proxy-tier
      - openldap
  
  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: phpldapadmin
    hostname: phpldapadmin
    ports: 
      - "9080:80"
    environment: 
      - PHPLDAPADMIN_LDAP_HOSTS=openldap
      - PHPLDAPADMIN_HTTPS=false
    depends_on:
      - openldap
    networks:
      - openldap

  app:
    image: nextcloud:apache
    container_name: nextcloud
    restart: always
    volumes:
      - nextcloud-data:/var/www/html:z
    environment:
      - VIRTUAL_HOST=nextqloud.mooo.com
      - LETSENCRYPT_HOST=nextqloud.mooo.com
      - LETSENCRYPT_EMAIL=jumaga2015@gmail.com

      - MYSQL_HOST=db
      - REDIS_HOST=redis

      - TRUSTED_PROXIES=proxy
      - OVERWRITECLIURL=https://nextqloud.mooo.com
      - OVERWRITEPROTOCOL=https
      - OVERWRITEHOST=nextqloud.mooo.com  
    env_file:
      - db.env
    depends_on:
      - db
      - redis
    networks:
      - proxy-tier
      - default

  cron:
    image: nextcloud:apache
    container_name: nextcloud-cron
    restart: always
    volumes:
      - nextcloud-data:/var/www/html:z
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis

  proxy:
    build: ./proxy
    container_name: proxy
    restart: always
    ports:
      - 80:80
      # you can remove port 81 after you have HTTPS setup to your Nginx Proxy Manager admin page
      - 81:81
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - proxy-certs:/etc/nginx/certs:z,ro
      - proxy-vhost.d:/etc/nginx/vhost.d:z
      - proxy-html:/usr/share/nginx/html:z
      - /var/run/docker.sock:/tmp/docker.sock:z,ro
    networks:
      - proxy-tier

  letsencrypt-companion:
    image: nginxproxy/acme-companion
    container_name: letsencrypt
    restart: always
    volumes:
      - proxy-certs:/etc/nginx/certs:z
      - proxy-vhost.d:/etc/nginx/vhost.d:z
      - proxy-html:/usr/share/nginx/html:z
      - /var/run/docker.sock:/var/run/docker.sock:z,ro
      - letsencrypt:/etc/acme.sh:z
    networks:
      - proxy-tier
    depends_on:
      - proxy

# self signed
#  omgwtfssl:
#    image: paulczar/omgwtfssl
#    restart: "no"
#    volumes:
#      - certs:/certs
#    environment:
#      - SSL_SUBJECT=servhostname.local
#      - CA_SUBJECT=my@example.com
#      - SSL_KEY=/certs/servhostname.local.key
#      - SSL_CSR=/certs/servhostname.local.csr
#      - SSL_CERT=/certs/servhostname.local.crt
#    networks:
#      - proxy-tier

  collabora:
    image: collabora/code
    container_name: collabora
    restart: always
    networks:
      - proxy-tier
    depends_on:
      - proxy
    cap_add:
     - MKNOD
    ports:
      - 127.0.0.1:9980:9980
    environment:
      # IMPORTANT: Note the backslashs before the dots here (and only here)!
      - domain=nextqloud.mooo.com
      - username=admin
      - password=QCorporation#3
      - VIRTUAL_HOST=officeqloud.mooo.com
      - LETSENCRYPT_HOST=officeqloud.mooo.com
      - VIRTUAL_NETWORK=proxy-tier
      - VIRTUAL_PORT=9980
      - extra_params=--o:ssl.enable=false --o:ssl.termination=true
    #En nextcloud configuraci√≥n office, poner este host <https://officeqloud.mooo.com>

  coturn:
    image: coturn/coturn:latest
    container_name: coturn
    restart: always  
    ports:
      - 3478:3478
      - 3478:3478/udp
      - 5349:5349
      - 5349:5349/udp
      - 49100-49200:49100-49200/udp
    volumes:
      - coturn-data:/var/lib/coturn
    command: --log-file=stdout --realm=nextqloud.mooo.com --min-port=49100 --max-port=49200 --fingerprint --stale-nonce --no-multicast-peers --use-auth-secret --static-auth-secret=26c10e36382f904ec6aa03eb33ebe0a0d09ef6b5bdc7ca080459e83e1a962699 --no-cli --no-tlsv1 --no-tlsv1_1 --total-quota=100
    depends_on:
      - redis

  cloudflare-ddns:
    container_name: cloudflare-ddns
    environment:
      - API_KEY=1O0DEillqBQ2LqT-9TBnVBCO5ZJmATC_bwZiEKs-
      - ZONE=qloudserver.es
      - SUBDOMAIN=mail
    image: oznu/cloudflare-ddns

  mailserver:
    image: ghcr.io/docker-mailserver/docker-mailserver:latest
    container_name: mailserver
    # Provide the FQDN of your mail server here (Your DNS MX record should point to this value)
    hostname: mail.qloudserver.es
    environment:
      # SSL_TYPE:         Uses the `letsencrypt` method to find mounted certificates.
      # VIRTUAL_HOST:     The FQDN that `nginx-proxy` will configure itself to handle for HTTP[S] connections.
      # LETSENCRYPT_HOST: The FQDN for a certificate that `acme-companion` will provision and renew.
      - SSL_TYPE=letsencrypt
      - VIRTUAL_HOST=mail.qloudserver.es
      - LETSENCRYPT_HOST=mail.qloudserver.es    
    env_file: mailserver.env
    # More information about the mail-server ports:
    # https://docker-mailserver.github.io/docker-mailserver/latest/config/security/understanding-the-ports/
    # To avoid conflicts with yaml base-60 float, DO NOT remove the quotation marks.
    ports:
      - "25:25"    # SMTP  (explicit TLS => STARTTLS, Authentication is DISABLED => use port 465/587 instead)
      - "143:143"  # IMAP4 (explicit TLS => STARTTLS)
      - "465:465"  # ESMTP (implicit TLS)
      - "587:587"  # ESMTP (explicit TLS => STARTTLS)
      - "993:993"  # IMAP4 (implicit TLS)
    volumes:
      - dms-mail-data:/var/mail/
      - dms-mail-state:/var/mail-state/
      - dms-mail-logs:/var/log/mail/
      - dms-config:/tmp/docker-mailserver/
      - /etc/localtime:/etc/localtime:ro
      - proxy-certs:/etc/letsencrypt/live/:ro
    networks:
      - proxy-tier
    restart: always
    stop_grace_period: 1m
    # Uncomment if using `ENABLE_FAIL2BAN=1`:
    # cap_add:
    #   - NET_ADMIN
    healthcheck:
      test: "ss --listening --tcp | grep -P 'LISTEN.+:smtp' || exit 1"
      timeout: 3s
      retries: 0

volumes:
  openldap-certificates:
  openldap-slapd-database:
  openldap-slapd-config:
  nextcloud-db:
  nextcloud-data:
  proxy-certs:
  proxy-vhost.d:
  proxy-html:
  letsencrypt:
  redis-data:
    driver: local
  coturn-data:
  dms-mail-data:
  dms-mail-state:
  dms-mail-logs:
  dms-config:

networks:
  proxy-tier:
  openldap:
    driver: bridge